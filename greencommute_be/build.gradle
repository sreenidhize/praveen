allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin:"org.sonarqube"
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    jacoco {
        toolVersion = '0.8.6'
    }
}
test {
    useJUnitPlatform()
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.1.1"
  }
}
sonarqube {
    properties {
        property "sonar.projectKey", "BC16-greencommute-be"
        property "sonar.organization", "zemoso-int"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.exclusions", "**/entity/**"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
        property "sonar.coverage.jacoco.htmlReportPath", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.html"

    }
}

0

subprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}
task codeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.test
}